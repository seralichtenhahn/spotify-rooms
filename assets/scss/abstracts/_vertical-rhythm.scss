// =======================
// Vertical Rhythm & Settings
//
// Inspired by the Foundation by ZURB (foundation.zurb.com)
// Licensed under MIT Open Source
// =======================
/* stylelint-disable */

// Rhythm settings
// - - - - - - - - - - - - - - - - - - - - - - - - -
// Variables:
// * $base-font-size - Absolute height of body text, in pixels
// * $base-line-height - Absolute height of one line of type, in pixels
// * $round-to-nearest-half-line - Allows the `adjust-font-size-to` mixin and the `lines-for-font-size` function
//  to round the line height to the nearest half line height instead of the
//  nearest integral line height to avoid large spacing between lines.
// * $min-line-padding - Ensure there is minimal padding defined in pixels
// * $browser-default-font-size - Define default browser font size
$base-font-size: 16px !default;
$base-line-height: 24px !default;
$round-to-nearest-half-line: true !default;
$min-line-padding: 2px !default;
$browser-default-font-size: 16px !default;

// rhythm($lines:1, $offset:0)
//
// Return the height of n baselines in rem.
//
// * `$lines` - number of baslines to create height of element (line-height, padding, margin,...)
// * $offset - number of pixel, that should be substracted from line-height
//
// ### Example:
// * line-height: rhythm; - set line-height to height of baseline
// * line-height: rhythm(2); - set line-height to baseline*2
// * line-height: rhythm(2,15); - set line-height to (baseline*2)-15px
//
//
// Compatibility untested.
//
// Styleguide 1.5.1
@function rhythm($lines: 1, $offset: 0) {
  $value: $base-line-height * $lines - $offset;

  @return rem-calc($value);
}

@function rh($lines: 1, $offset: 0) {
  @return rhythm($lines, $offset);
}

// lines-for-font-size($font-size)
//
// Calculate the number of baselines required to accomodate a
// given pixel-based font size.
//
// Compatibility untested.
//
// Styleguide 1.5.2
@function lines-for-font-size($font-size) {
  $lines: if($round-to-nearest-half-line, ceil(2 * $font-size / $base-line-height) / 2, ceil($font-size / $base-line-height));

  @if $lines * $base-line-height - $font-size < $min-line-padding * 2 {
    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);
  }

  @return $lines;
}

@function calc-rhythm($size) {
  @return rhythm(lines-for-font-size($size));
}

// establish-baseline()
//
// @mixin
//
// Calculate the number of baselines required to accomodate a
// given pixel-based font size.
// Set type size and baseline grid on the root element - html.
//
// Compatibility untested.
//
// Styleguide 1.5.3
@mixin establish-baseline {
  html {
    $new-font-size: $base-font-size / $browser-default-font-size * 100%; // eg. 16px รท 16px * 100%

    line-height: rem-calc($base-line-height);
    // Only set the font size if it differs from the browser default
    @if $new-font-size != 100% {
      font-size: $new-font-size;
    }
  }
}

// set-font-size($to-size, $lines: lines-for-font-size($to-size))
//
// Set the font size to the specified number of pixels and set minimal
// line-height to this font-size.
//
// $to-size - Desired font size, in pixels
// $lines   - Desired leading, expressed in baselines (can fractional)
//
// Compatibility untested.
//
// Styleguide 1.5.4
@mixin set-font-size($to-size, $lines: lines-for-font-size($to-size)) {
  font-size: rem-calc($to-size);
  line-height: rem-calc($base-line-height * $lines);
}
