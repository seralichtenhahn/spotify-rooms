service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }

    match /rooms/{room} {
    	allow create, get: if request.auth.uid != null;
      allow update: if request.auth.uid.split(":")[1] == resource.data.owner_id &&
        request.resource.data.createdAt == resource.data.createdAt &&
      	request.resource.data.isPlaying is bool &&
        request.resource.data.owner == resource.data.owner &&
        request.resource.data.owner_id == resource.data.owner_id &&
        request.resource.data.playlistId == resource.data.playlistId &&
        request.resource.data.title == resource.data.title;
      allow delete: if isOwner();
        
      match /queue/{track} {
      	allow read, create: if request.auth.uid != null;
        allow update: if request.auth.uid != null &&
          request.resource.data.artist == resource.data.artist &&
          request.resource.data.createdAt == resource.data.createdAt &&
          request.resource.data.image == resource.data.image &&
          request.resource.data.score is int &&
          request.resource.data.title == resource.data.title &&
          request.resource.data.user == resource.data.user;
        allow delete: if isOwner();
      }

      function isOwner() {
        return get(/databases/$(database)/documents/rooms/$(room)).data.owner_id == request.auth.uid.split(":")[1];
      }
    }

    match /users/{userId}/{documents=**} {
      allow read, create, update: if request.auth.uid.split(":")[1] == userId;
    }
  }
}